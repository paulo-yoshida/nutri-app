import streamlit as st
from datetime import datetime
from src import db_utils  # Importa nossas fun√ß√µes do banco de dados

st.set_page_config(page_title="Gest√£o de Pacientes", page_icon="üë•")

st.title("üë• Gest√£o de Pacientes")

# --- L√ìGICA PARA BUSCAR A LISTA DE PACIENTES ---
patient_list = db_utils.get_patient_list()
# Cria um dicion√°rio para mapear nome para id, e vice-versa
patient_map = {patient['name']: patient['id'] for patient in patient_list}
patient_names = ["Cadastrar Novo Paciente"] + list(patient_map.keys())

# --- MENU DE SELE√á√ÉO ---
selected_patient_name = st.selectbox("Selecione um Paciente ou Cadastre um Novo", options=patient_names)

# --- L√ìGICA DE EXIBI√á√ÉO ---

if selected_patient_name == "Cadastrar Novo Paciente":
    st.subheader("Formul√°rio de Cadastro")
    with st.form("new_patient_form", clear_on_submit=True):
        name = st.text_input("Nome Completo", key="new_name")
        birth_date = st.date_input("Data de Nascimento", min_value=datetime(1920, 1, 1), key="new_bdate", format="DD/MM/YYYY")
        contact = st.text_input("Contato (Telefone/Email)", key="new_contact")
        medical_history = st.text_area("Hist√≥rico Cl√≠nico (patologias, alergias, objetivos...)", key="new_history")
        
        submitted = st.form_submit_button("Salvar Paciente")
        if submitted:
            if name:  # Valida√ß√£o simples para garantir que o nome n√£o est√° vazio
                db_utils.add_patient(name, birth_date.strftime("%Y-%m-%d"), contact, medical_history)
                st.success(f"Paciente '{name}' cadastrado com sucesso!")
                st.rerun() # Recarrega a p√°gina para atualizar a lista
            else:
                st.error("O nome do paciente √© obrigat√≥rio.")

else: # Se um paciente existente foi selecionado
    st.subheader(f"Informa√ß√µes de: {selected_patient_name}")
    
    patient_id = patient_map[selected_patient_name]
    patient_details = db_utils.get_patient_details(patient_id)

    if patient_details:
        with st.form("edit_patient_form"):
            # Converte a data de string para objeto date para o widget
            birth_date_obj = datetime.strptime(patient_details['birth_date'], '%Y-%m-%d').date()

            name = st.text_input("Nome Completo", value=patient_details['name'])
            birth_date = st.date_input("Data de Nascimento", value=birth_date_obj, min_value=datetime(1920, 1, 1))
            contact = st.text_input("Contato (Telefone/Email)", value=patient_details['contact'])
            medical_history = st.text_area("Hist√≥rico Cl√≠nico", value=patient_details['medical_history'], height=200)

            # Colunas para os bot√µes de a√ß√£o
            col1, col2 = st.columns(2)
            with col1:
                update_button = st.form_submit_button("‚úÖ Atualizar Informa√ß√µes")
            with col2:
                delete_button = st.form_submit_button("‚ùå Excluir Paciente")

            if update_button:
                db_utils.update_patient(patient_id, name, birth_date.strftime("%Y-%m-%d"), contact, medical_history)
                st.success(f"Informa√ß√µes de '{name}' atualizadas com sucesso!")
                st.rerun() # Recarrega a p√°gina para refletir as mudan√ßas

            if delete_button:
                # Adiciona um passo de confirma√ß√£o para seguran√ßa
                st.session_state.confirm_delete = True
                st.session_state.patient_to_delete = (patient_id, name)
    
    # L√≥gica de confirma√ß√£o da exclus√£o (fora do formul√°rio principal)
    if 'confirm_delete' in st.session_state and st.session_state.confirm_delete:
        patient_id, name = st.session_state.patient_to_delete
        st.warning(f"**Aten√ß√£o:** Voc√™ tem certeza que deseja excluir **{name}**? Esta a√ß√£o n√£o pode ser desfeita.")
        
        col1_conf, col2_conf, col3_conf = st.columns([1,1,3])
        with col1_conf:
            if st.button("Sim, excluir", type="primary"):
                db_utils.delete_patient(patient_id)
                st.success(f"Paciente '{name}' foi exclu√≠do.")
                del st.session_state.confirm_delete
                del st.session_state.patient_to_delete
                st.rerun()
        with col2_conf:
            if st.button("N√£o, cancelar"):
                del st.session_state.confirm_delete
                del st.session_state.patient_to_delete
                st.rerun()